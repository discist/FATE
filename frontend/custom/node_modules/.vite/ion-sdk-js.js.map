{
  "version": 3,
  "sources": ["../ion-sdk-js/lib/stream.js", "../ion-sdk-js/lib/client.js", "../ion-sdk-js/lib/index.js", "dep:ion-sdk-js"],
  "sourcesContent": ["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeRemote = exports.LocalStream = exports.VideoConstraints = void 0;\nconst resolutions = ['qvga', 'vga', 'shd', 'hd', 'fhd', 'qhd'];\nexports.VideoConstraints = {\n    qvga: {\n        resolution: {\n            width: { ideal: 320 },\n            height: { ideal: 180 },\n            frameRate: {\n                ideal: 15,\n                max: 30,\n            },\n        },\n        encodings: {\n            maxBitrate: 150000,\n            maxFramerate: 15.0,\n        },\n    },\n    vga: {\n        resolution: {\n            width: { ideal: 640 },\n            height: { ideal: 360 },\n            frameRate: {\n                ideal: 30,\n                max: 60,\n            },\n        },\n        encodings: {\n            maxBitrate: 500000,\n            maxFramerate: 30.0,\n        },\n    },\n    shd: {\n        resolution: {\n            width: { ideal: 960 },\n            height: { ideal: 540 },\n            frameRate: {\n                ideal: 30,\n                max: 60,\n            },\n        },\n        encodings: {\n            maxBitrate: 1200000,\n            maxFramerate: 30.0,\n        },\n    },\n    hd: {\n        resolution: {\n            width: { ideal: 1280 },\n            height: { ideal: 720 },\n            frameRate: {\n                ideal: 30,\n                max: 60,\n            },\n        },\n        encodings: {\n            maxBitrate: 2500000,\n            maxFramerate: 30.0,\n        },\n    },\n    fhd: {\n        resolution: {\n            width: { ideal: 1920 },\n            height: { ideal: 1080 },\n            frameRate: {\n                ideal: 30,\n                max: 60,\n            },\n        },\n        encodings: {\n            maxBitrate: 4000000,\n            maxFramerate: 30.0,\n        },\n    },\n    qhd: {\n        resolution: {\n            width: { ideal: 2560 },\n            height: { ideal: 1440 },\n            frameRate: {\n                ideal: 30,\n                max: 60,\n            },\n        },\n        encodings: {\n            maxBitrate: 8000000,\n            maxFramerate: 30.0,\n        },\n    },\n};\nconst defaults = {\n    resolution: 'hd',\n    codec: 'vp8',\n    audio: true,\n    video: true,\n    simulcast: false,\n};\nclass LocalStream extends MediaStream {\n    constructor(stream, constraints) {\n        super(stream);\n        this.constraints = constraints;\n    }\n    static async getUserMedia(constraints = defaults) {\n        const stream = await navigator.mediaDevices.getUserMedia({\n            audio: LocalStream.computeAudioConstraints({\n                ...defaults,\n                ...constraints,\n            }),\n            video: LocalStream.computeVideoConstraints({\n                ...defaults,\n                ...constraints,\n            }),\n        });\n        return new LocalStream(stream, {\n            ...defaults,\n            ...constraints,\n        });\n    }\n    static async getDisplayMedia(constraints = {\n        codec: 'vp8',\n        resolution: 'hd',\n        audio: false,\n        video: true,\n        simulcast: false,\n    }) {\n        // @ts-ignore\n        const stream = await navigator.mediaDevices.getDisplayMedia(constraints);\n        return new LocalStream(stream, {\n            ...defaults,\n            ...constraints,\n        });\n    }\n    static computeAudioConstraints(constraints) {\n        return constraints.audio;\n    }\n    static computeVideoConstraints(constraints) {\n        if (constraints.video instanceof Object) {\n            return constraints.video;\n        }\n        else if (constraints.video && constraints.resolution) {\n            return {\n                ...exports.VideoConstraints[constraints.resolution].resolution,\n            };\n        }\n        return constraints.video;\n    }\n    getTrack(kind) {\n        let tracks;\n        if (kind === 'video') {\n            tracks = this.getVideoTracks();\n            return tracks.length > 0 ? this.getVideoTracks()[0] : undefined;\n        }\n        tracks = this.getAudioTracks();\n        return tracks.length > 0 ? this.getAudioTracks()[0] : undefined;\n    }\n    async getNewTrack(kind) {\n        const stream = await navigator.mediaDevices.getUserMedia({\n            [kind]: kind === 'video'\n                ? LocalStream.computeVideoConstraints(this.constraints)\n                : LocalStream.computeAudioConstraints(this.constraints),\n        });\n        return stream.getTracks()[0];\n    }\n    publishTrack(track) {\n        if (this.pc) {\n            const init = {\n                streams: [this],\n                direction: 'sendonly',\n            };\n            if (track.kind === 'video') {\n                if (this.encodingParams) {\n                    init.sendEncodings = this.encodingParams;\n                }\n                else if (this.constraints.simulcast) {\n                    const idx = resolutions.indexOf(this.constraints.resolution);\n                    const encodings = [\n                        {\n                            rid: 'f',\n                            maxBitrate: exports.VideoConstraints[resolutions[idx]].encodings.maxBitrate,\n                            maxFramerate: exports.VideoConstraints[resolutions[idx]].encodings.maxFramerate,\n                        },\n                    ];\n                    if (idx - 1 >= 0) {\n                        encodings.push({\n                            rid: 'h',\n                            scaleResolutionDownBy: 2.0,\n                            maxBitrate: exports.VideoConstraints[resolutions[idx - 1]].encodings.maxBitrate,\n                            maxFramerate: exports.VideoConstraints[resolutions[idx - 1]].encodings.maxFramerate,\n                        });\n                    }\n                    if (idx - 2 >= 0) {\n                        encodings.push({\n                            rid: 'q',\n                            scaleResolutionDownBy: 4.0,\n                            maxBitrate: exports.VideoConstraints[resolutions[idx - 2]].encodings.maxBitrate,\n                            maxFramerate: exports.VideoConstraints[resolutions[idx - 2]].encodings.maxFramerate,\n                        });\n                    }\n                    init.sendEncodings = encodings;\n                }\n                else {\n                    init.sendEncodings = [exports.VideoConstraints[this.constraints.resolution].encodings];\n                }\n            }\n            const transceiver = this.pc.addTransceiver(track, init);\n            this.setPreferredCodec(transceiver, track.kind);\n        }\n    }\n    setPreferredCodec(transceiver, kind) {\n        if ('setCodecPreferences' in transceiver) {\n            const cap = RTCRtpSender.getCapabilities(kind);\n            if (!cap)\n                return;\n            let selCodec;\n            // 42e01f for safari/chrome/firefox cross-browser compatibility\n            if (kind === 'video' && this.constraints.codec && this.constraints.codec.toLowerCase() === 'h264') {\n                this.constraints.preferredCodecProfile = '42e01f';\n            }\n            if (this.constraints.preferredCodecProfile && kind === 'video') {\n                const allCodecProfiles = cap.codecs.filter((c) => c.mimeType.toLowerCase() === `video/${this.constraints.codec.toLowerCase()}`);\n                if (!allCodecProfiles) {\n                    return;\n                }\n                selCodec = allCodecProfiles.find((c) => { var _a; return c.sdpFmtpLine && ((_a = c.sdpFmtpLine) === null || _a === void 0 ? void 0 : _a.indexOf(`profile-level-id=${this.constraints.preferredCodecProfile}`)) >= 0; });\n                if (!selCodec) {\n                    // get first one\n                    selCodec = allCodecProfiles[0];\n                }\n            }\n            else {\n                selCodec = cap.codecs.find((c) => c.mimeType.toLowerCase() === `video/${this.constraints.codec.toLowerCase()}` ||\n                    c.mimeType.toLowerCase() === `audio/opus`);\n            }\n            if (selCodec) {\n                transceiver.setCodecPreferences([selCodec]);\n            }\n        }\n    }\n    updateTrack(next, prev) {\n        this.addTrack(next);\n        // If published, replace published track with track from new device\n        if (prev) {\n            this.removeTrack(prev);\n            prev.stop();\n            if (this.pc) {\n                this.pc.getSenders().forEach(async (sender) => {\n                    var _a, _b;\n                    if (((_a = sender === null || sender === void 0 ? void 0 : sender.track) === null || _a === void 0 ? void 0 : _a.kind) === next.kind) {\n                        (_b = sender.track) === null || _b === void 0 ? void 0 : _b.stop();\n                        sender.replaceTrack(next);\n                    }\n                });\n            }\n        }\n        else {\n            this.addTrack(next);\n            if (this.pc) {\n                this.publishTrack(next);\n            }\n        }\n    }\n    initAudioEmptyTrack() {\n        // @ts-ignore\n        const AudioContext = window.AudioContext || window.webkitAudioContext;\n        const ctx = new AudioContext();\n        const oscillator = ctx.createOscillator();\n        oscillator.frequency.setValueAtTime(20000, ctx.currentTime);\n        const dst = oscillator.connect(ctx.createMediaStreamDestination());\n        oscillator.start();\n        return dst.stream.getAudioTracks()[0];\n    }\n    initVideoEmptyTrack(width, height) {\n        var _a;\n        const canvas = Object.assign(document.createElement('canvas'), { width, height });\n        (_a = canvas.getContext('2d')) === null || _a === void 0 ? void 0 : _a.fillRect(0, 0, width, height);\n        const stream = canvas.captureStream();\n        return stream.getVideoTracks()[0];\n    }\n    publish(transport, encodingParams) {\n        this.pc = transport.pc;\n        this.api = transport.api;\n        this.encodingParams = encodingParams;\n        this.getTracks().forEach(this.publishTrack.bind(this));\n    }\n    unpublish() {\n        if (this.pc) {\n            const tracks = this.getTracks();\n            this.pc.getSenders().forEach((s) => {\n                if (s.track && tracks.includes(s.track)) {\n                    this.pc.removeTrack(s);\n                }\n            });\n        }\n    }\n    async switchDevice(kind, deviceId) {\n        this.constraints = {\n            ...this.constraints,\n            [kind]: this.constraints[kind] instanceof Object\n                ? {\n                    ...this.constraints[kind],\n                    deviceId,\n                }\n                : { deviceId },\n        };\n        const prev = this.getTrack(kind);\n        const next = await this.getNewTrack(kind);\n        this.updateTrack(next, prev);\n    }\n    mute(kind) {\n        const track = this.getTrack(kind);\n        if (track && this.constraints.sendEmptyOnMute) {\n            const emptyTrack = kind === 'audio'\n                ? this.initAudioEmptyTrack()\n                : this.initVideoEmptyTrack((track === null || track === void 0 ? void 0 : track.getSettings().width) || 640, (track === null || track === void 0 ? void 0 : track.getSettings().height) || 360);\n            emptyTrack.enabled = false;\n            this.updateTrack(emptyTrack, track);\n            return;\n        }\n        if (track) {\n            track.stop();\n        }\n    }\n    async unmute(kind) {\n        const prev = this.getTrack(kind);\n        const track = await this.getNewTrack(kind);\n        this.updateTrack(track, prev);\n    }\n    async enableLayers(layers) {\n        const call = {\n            streamId: this.id,\n            layers,\n        };\n        const callStr = JSON.stringify(call);\n        if (this.api) {\n            if (this.api.readyState !== 'open') {\n                // queue call if we aren't open yet\n                this.api.onopen = () => { var _a; return (_a = this.api) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(call)); };\n            }\n            else {\n                this.api.send(JSON.stringify(call));\n            }\n        }\n        const layerValues = ['high', 'medium', 'low'];\n        await Promise.all(layerValues.map(async (layer) => {\n            await this.updateMediaEncodingParams({ active: layers.includes(layer) }, layer);\n        }));\n    }\n    async updateMediaEncodingParams(encodingParams, layer) {\n        var _a;\n        if (!this.pc)\n            return;\n        const tracks = this.getTracks();\n        await Promise.all((_a = this.pc) === null || _a === void 0 ? void 0 : _a.getSenders().filter((sender) => sender.track && tracks.includes(sender.track)).map(async (sender) => {\n            const params = sender.getParameters();\n            if (!params.encodings) {\n                params.encodings = [{}];\n            }\n            let idx = 0;\n            if (this.constraints.simulcast && layer) {\n                const rid = layer === 'high' ? 'f' : layer === 'medium' ? 'h' : 'q';\n                idx = params.encodings.findIndex((encoding) => encoding.rid === rid);\n                if (params.encodings.length < idx + 1)\n                    return;\n            }\n            params.encodings[idx] = {\n                ...params.encodings[idx],\n                ...encodingParams,\n            };\n            await sender.setParameters(params);\n        }));\n    }\n}\nexports.LocalStream = LocalStream;\nfunction makeRemote(stream, transport) {\n    const remote = stream;\n    remote.audio = true;\n    remote.video = 'none';\n    remote.framerate = 'high';\n    remote._videoPreMute = 'high';\n    const select = () => {\n        const call = {\n            streamId: remote.id,\n            video: remote.video,\n            audio: remote.audio,\n            framerate: remote.framerate,\n        };\n        if (transport.api) {\n            if (transport.api.readyState !== 'open') {\n                // queue call if we aren't open yet\n                transport.api.onopen = () => { var _a; return (_a = transport.api) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(call)); };\n            }\n            else {\n                transport.api.send(JSON.stringify(call));\n            }\n        }\n    };\n    remote.preferLayer = (layer) => {\n        remote.video = layer;\n        select();\n    };\n    remote.preferFramerate = (layer) => {\n        remote.framerate = layer;\n        select();\n    };\n    remote.mute = (kind) => {\n        if (kind === 'audio') {\n            remote.audio = false;\n        }\n        else if (kind === 'video') {\n            remote._videoPreMute = remote.video;\n            remote.video = 'none';\n        }\n        select();\n    };\n    remote.unmute = (kind) => {\n        if (kind === 'audio') {\n            remote.audio = true;\n        }\n        else if (kind === 'video') {\n            remote.video = remote._videoPreMute;\n        }\n        select();\n    };\n    return remote;\n}\nexports.makeRemote = makeRemote;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Transport = void 0;\nconst stream_1 = require(\"./stream\");\nconst API_CHANNEL = 'ion-sfu';\nconst ERR_NO_SESSION = 'no active session, join first';\nvar Role;\n(function (Role) {\n    Role[Role[\"pub\"] = 0] = \"pub\";\n    Role[Role[\"sub\"] = 1] = \"sub\";\n})(Role || (Role = {}));\nclass Transport {\n    constructor(role, signal, config) {\n        this.signal = signal;\n        this.pc = new RTCPeerConnection(config);\n        this.candidates = [];\n        if (role === Role.pub) {\n            this.pc.createDataChannel(API_CHANNEL);\n        }\n        this.pc.onicecandidate = ({ candidate }) => {\n            if (candidate) {\n                this.signal.trickle({ target: role, candidate });\n            }\n        };\n        this.pc.oniceconnectionstatechange = async (e) => {\n            if (this.pc.iceConnectionState === 'disconnected') {\n                if (this.pc.restartIce !== undefined) {\n                    // this will trigger onNegotiationNeeded\n                    this.pc.restartIce();\n                }\n            }\n        };\n    }\n}\nexports.Transport = Transport;\nclass Client {\n    constructor(signal, config = {\n        codec: 'vp8',\n        iceServers: [\n            {\n                urls: ['stun:stun.l.google.com:19302', 'stun:stun1.l.google.com:19302'],\n            },\n        ],\n    }) {\n        this.signal = signal;\n        this.config = config;\n        signal.onnegotiate = this.negotiate.bind(this);\n        signal.ontrickle = this.trickle.bind(this);\n    }\n    async join(sid, uid) {\n        this.transports = {\n            [Role.pub]: new Transport(Role.pub, this.signal, this.config),\n            [Role.sub]: new Transport(Role.sub, this.signal, this.config),\n        };\n        this.transports[Role.sub].pc.ontrack = (ev) => {\n            const stream = ev.streams[0];\n            const remote = stream_1.makeRemote(stream, this.transports[Role.sub]);\n            if (this.ontrack) {\n                this.ontrack(ev.track, remote);\n            }\n        };\n        const apiReady = new Promise((resolve) => {\n            this.transports[Role.sub].pc.ondatachannel = (ev) => {\n                if (ev.channel.label === API_CHANNEL) {\n                    this.transports[Role.sub].api = ev.channel;\n                    this.transports[Role.pub].api = ev.channel;\n                    ev.channel.onmessage = (e) => {\n                        try {\n                            const msg = JSON.parse(e.data);\n                            this.processChannelMessage(msg);\n                        }\n                        catch (err) {\n                            /* tslint:disable-next-line:no-console */\n                            console.error(err);\n                        }\n                    };\n                    resolve();\n                    return;\n                }\n                if (this.ondatachannel) {\n                    this.ondatachannel(ev);\n                }\n            };\n        });\n        const offer = await this.transports[Role.pub].pc.createOffer();\n        await this.transports[Role.pub].pc.setLocalDescription(offer);\n        const answer = await this.signal.join(sid, uid, offer);\n        await this.transports[Role.pub].pc.setRemoteDescription(answer);\n        this.transports[Role.pub].candidates.forEach((c) => this.transports[Role.pub].pc.addIceCandidate(c));\n        this.transports[Role.pub].pc.onnegotiationneeded = this.onNegotiationNeeded.bind(this);\n        return apiReady;\n    }\n    leave() {\n        if (this.transports) {\n            Object.values(this.transports).forEach((t) => t.pc.close());\n            delete this.transports;\n        }\n    }\n    getPubStats(selector) {\n        if (!this.transports) {\n            throw Error(ERR_NO_SESSION);\n        }\n        return this.transports[Role.pub].pc.getStats(selector);\n    }\n    getSubStats(selector) {\n        if (!this.transports) {\n            throw Error(ERR_NO_SESSION);\n        }\n        return this.transports[Role.sub].pc.getStats(selector);\n    }\n    publish(stream, encodingParams) {\n        if (!this.transports) {\n            throw Error(ERR_NO_SESSION);\n        }\n        stream.publish(this.transports[Role.pub], encodingParams);\n    }\n    restartIce() {\n        this.renegotiate(true);\n    }\n    createDataChannel(label) {\n        if (!this.transports) {\n            throw Error(ERR_NO_SESSION);\n        }\n        return this.transports[Role.pub].pc.createDataChannel(label);\n    }\n    close() {\n        if (this.transports) {\n            Object.values(this.transports).forEach((t) => t.pc.close());\n        }\n        this.signal.close();\n    }\n    trickle({ candidate, target }) {\n        if (!this.transports) {\n            throw Error(ERR_NO_SESSION);\n        }\n        if (this.transports[target].pc.remoteDescription) {\n            this.transports[target].pc.addIceCandidate(candidate);\n        }\n        else {\n            this.transports[target].candidates.push(candidate);\n        }\n    }\n    async negotiate(description) {\n        if (!this.transports) {\n            throw Error(ERR_NO_SESSION);\n        }\n        let answer;\n        try {\n            await this.transports[Role.sub].pc.setRemoteDescription(description);\n            this.transports[Role.sub].candidates.forEach((c) => this.transports[Role.sub].pc.addIceCandidate(c));\n            this.transports[Role.sub].candidates = [];\n            answer = await this.transports[Role.sub].pc.createAnswer();\n            await this.transports[Role.sub].pc.setLocalDescription(answer);\n            this.signal.answer(answer);\n        }\n        catch (err) {\n            /* tslint:disable-next-line:no-console */\n            console.error(err);\n            if (this.onerrnegotiate)\n                this.onerrnegotiate(Role.sub, err, description, answer);\n        }\n    }\n    onNegotiationNeeded() {\n        this.renegotiate(false);\n    }\n    async renegotiate(iceRestart) {\n        if (!this.transports) {\n            throw Error(ERR_NO_SESSION);\n        }\n        let offer;\n        let answer;\n        try {\n            offer = await this.transports[Role.pub].pc.createOffer({ iceRestart });\n            await this.transports[Role.pub].pc.setLocalDescription(offer);\n            answer = await this.signal.offer(offer);\n            await this.transports[Role.pub].pc.setRemoteDescription(answer);\n        }\n        catch (err) {\n            /* tslint:disable-next-line:no-console */\n            console.error(err);\n            if (this.onerrnegotiate)\n                this.onerrnegotiate(Role.pub, err, offer, answer);\n        }\n    }\n    processChannelMessage(msg) {\n        if (msg.method !== undefined && msg.params !== undefined) {\n            switch (msg.method) {\n                case 'audioLevels':\n                    if (this.onspeaker) {\n                        this.onspeaker(msg.params);\n                    }\n                    break;\n                case 'activeLayer':\n                    if (this.onactivelayer) {\n                        this.onactivelayer(msg.params);\n                    }\n                    break;\n                default:\n                // do nothing\n            }\n        }\n        else {\n            // legacy channel message - payload contains audio levels\n            if (this.onspeaker) {\n                this.onspeaker(msg);\n            }\n        }\n    }\n}\nexports.default = Client;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LocalStream = exports.Client = void 0;\nconst client_1 = require(\"./client\");\nexports.Client = client_1.default;\nconst stream_1 = require(\"./stream\");\nObject.defineProperty(exports, \"LocalStream\", { enumerable: true, get: function () { return stream_1.LocalStream; } });\n", "export default require(\"./node_modules/ion-sdk-js/lib/index.js\");"],
  "mappings": "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",
  "names": []
}
