{
  "version": 3,
  "sources": ["../@capacitor/camera/src/web.ts"],
  "sourcesContent": ["import { WebPlugin, CapacitorException } from '@capacitor/core';\n\nimport { CameraSource, CameraDirection } from './definitions';\nimport type {\n  CameraPlugin,\n  GalleryImageOptions,\n  GalleryPhotos,\n  ImageOptions,\n  PermissionStatus,\n  Photo,\n} from './definitions';\n\nexport class CameraWeb extends WebPlugin implements CameraPlugin {\n  async getPhoto(options: ImageOptions): Promise<Photo> {\n    // eslint-disable-next-line no-async-promise-executor\n    return new Promise<Photo>(async (resolve, reject) => {\n      if (options.webUseInput || options.source === CameraSource.Photos) {\n        this.fileInputExperience(options, resolve);\n      } else if (options.source === CameraSource.Prompt) {\n        let actionSheet: any = document.querySelector('pwa-action-sheet');\n        if (!actionSheet) {\n          actionSheet = document.createElement('pwa-action-sheet');\n          document.body.appendChild(actionSheet);\n        }\n        actionSheet.header = options.promptLabelHeader || 'Photo';\n        actionSheet.cancelable = false;\n        actionSheet.options = [\n          { title: options.promptLabelPhoto || 'From Photos' },\n          { title: options.promptLabelPicture || 'Take Picture' },\n        ];\n        actionSheet.addEventListener('onSelection', async (e: any) => {\n          const selection = e.detail;\n          if (selection === 0) {\n            this.fileInputExperience(options, resolve);\n          } else {\n            this.cameraExperience(options, resolve, reject);\n          }\n        });\n      } else {\n        this.cameraExperience(options, resolve, reject);\n      }\n    });\n  }\n\n  async pickImages(_options: GalleryImageOptions): Promise<GalleryPhotos> {\n    // eslint-disable-next-line no-async-promise-executor\n    return new Promise<GalleryPhotos>(async resolve => {\n      this.multipleFileInputExperience(resolve);\n    });\n  }\n\n  private async cameraExperience(\n    options: ImageOptions,\n    resolve: any,\n    reject: any,\n  ) {\n    if (customElements.get('pwa-camera-modal')) {\n      const cameraModal: any = document.createElement('pwa-camera-modal');\n      cameraModal.facingMode =\n        options.direction === CameraDirection.Front ? 'user' : 'environment';\n      document.body.appendChild(cameraModal);\n      try {\n        await cameraModal.componentOnReady();\n        cameraModal.addEventListener('onPhoto', async (e: any) => {\n          const photo = e.detail;\n\n          if (photo === null) {\n            reject(new CapacitorException('User cancelled photos app'));\n          } else if (photo instanceof Error) {\n            reject(photo);\n          } else {\n            resolve(await this._getCameraPhoto(photo, options));\n          }\n\n          cameraModal.dismiss();\n          document.body.removeChild(cameraModal);\n        });\n\n        cameraModal.present();\n      } catch (e) {\n        this.fileInputExperience(options, resolve);\n      }\n    } else {\n      console.error(\n        `Unable to load PWA Element 'pwa-camera-modal'. See the docs: https://capacitorjs.com/docs/pwa-elements.`,\n      );\n      this.fileInputExperience(options, resolve);\n    }\n  }\n\n  private fileInputExperience(options: ImageOptions, resolve: any) {\n    let input = document.querySelector(\n      '#_capacitor-camera-input',\n    ) as HTMLInputElement;\n\n    const cleanup = () => {\n      input.parentNode?.removeChild(input);\n    };\n\n    if (!input) {\n      input = document.createElement('input') as HTMLInputElement;\n      input.id = '_capacitor-camera-input';\n      input.type = 'file';\n      input.hidden = true;\n      document.body.appendChild(input);\n      input.addEventListener('change', (_e: any) => {\n        const file = input.files![0];\n        let format = 'jpeg';\n\n        if (file.type === 'image/png') {\n          format = 'png';\n        } else if (file.type === 'image/gif') {\n          format = 'gif';\n        }\n\n        if (\n          options.resultType === 'dataUrl' ||\n          options.resultType === 'base64'\n        ) {\n          const reader = new FileReader();\n\n          reader.addEventListener('load', () => {\n            if (options.resultType === 'dataUrl') {\n              resolve({\n                dataUrl: reader.result,\n                format,\n              } as Photo);\n            } else if (options.resultType === 'base64') {\n              const b64 = (reader.result as string).split(',')[1];\n              resolve({\n                base64String: b64,\n                format,\n              } as Photo);\n            }\n\n            cleanup();\n          });\n\n          reader.readAsDataURL(file);\n        } else {\n          resolve({\n            webPath: URL.createObjectURL(file),\n            format: format,\n          });\n          cleanup();\n        }\n      });\n    }\n\n    input.accept = 'image/*';\n    (input as any).capture = true;\n\n    if (\n      options.source === CameraSource.Photos ||\n      options.source === CameraSource.Prompt\n    ) {\n      input.removeAttribute('capture');\n    } else if (options.direction === CameraDirection.Front) {\n      (input as any).capture = 'user';\n    } else if (options.direction === CameraDirection.Rear) {\n      (input as any).capture = 'environment';\n    }\n\n    input.click();\n  }\n\n  private multipleFileInputExperience(resolve: any) {\n    let input = document.querySelector(\n      '#_capacitor-camera-input-multiple',\n    ) as HTMLInputElement;\n\n    const cleanup = () => {\n      input.parentNode?.removeChild(input);\n    };\n\n    if (!input) {\n      input = document.createElement('input') as HTMLInputElement;\n      input.id = '_capacitor-camera-input-multiple';\n      input.type = 'file';\n      input.hidden = true;\n      input.multiple = true;\n      document.body.appendChild(input);\n      input.addEventListener('change', (_e: any) => {\n        const photos = [];\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < input.files!.length; i++) {\n          const file = input.files![i];\n          let format = 'jpeg';\n\n          if (file.type === 'image/png') {\n            format = 'png';\n          } else if (file.type === 'image/gif') {\n            format = 'gif';\n          }\n          photos.push({\n            webPath: URL.createObjectURL(file),\n            format: format,\n          });\n        }\n        resolve({ photos });\n        cleanup();\n      });\n    }\n\n    input.accept = 'image/*';\n\n    input.click();\n  }\n\n  private _getCameraPhoto(photo: Blob, options: ImageOptions) {\n    return new Promise<Photo>((resolve, reject) => {\n      const reader = new FileReader();\n      const format = photo.type.split('/')[1];\n      if (options.resultType === 'uri') {\n        resolve({\n          webPath: URL.createObjectURL(photo),\n          format: format,\n          saved: false,\n        });\n      } else {\n        reader.readAsDataURL(photo);\n        reader.onloadend = () => {\n          const r = reader.result as string;\n          if (options.resultType === 'dataUrl') {\n            resolve({\n              dataUrl: r,\n              format: format,\n              saved: false,\n            });\n          } else {\n            resolve({\n              base64String: r.split(',')[1],\n              format: format,\n              saved: false,\n            });\n          }\n        };\n        reader.onerror = e => {\n          reject(e);\n        };\n      }\n    });\n  }\n\n  async checkPermissions(): Promise<PermissionStatus> {\n    if (typeof navigator === 'undefined' || !navigator.permissions) {\n      throw this.unavailable('Permissions API not available in this browser');\n    }\n\n    try {\n      // https://developer.mozilla.org/en-US/docs/Web/API/Permissions/query\n      // the specific permissions that are supported varies among browsers that implement the\n      // permissions API, so we need a try/catch in case 'camera' is invalid\n      const permission = await window.navigator.permissions.query({\n        name: 'camera',\n      });\n      return {\n        camera: permission.state,\n        photos: 'granted',\n      };\n    } catch {\n      throw this.unavailable(\n        'Camera permissions are not available in this browser',\n      );\n    }\n  }\n\n  async requestPermissions(): Promise<PermissionStatus> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n}\n\nconst Camera = new CameraWeb();\n\nexport { Camera };\n"],
  "mappings": "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",
  "names": []
}
